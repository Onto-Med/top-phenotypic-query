package care.smith.top.top_phenotypic_query.tests;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertThrows;

import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

import org.junit.jupiter.api.Test;

import care.smith.top.model.Entity;
import care.smith.top.model.Phenotype;
import care.smith.top.model.ProjectionEntry.TypeEnum;
import care.smith.top.model.Query;
import care.smith.top.model.QueryCriterion;
import care.smith.top.top_phenotypic_query.adapter.DataAdapter;
import care.smith.top.top_phenotypic_query.adapter.config.DataAdapterConfig;
import care.smith.top.top_phenotypic_query.search.PhenotypeFinder;
import care.smith.top.top_phenotypic_query.util.builder.Phe;
import care.smith.top.top_phenotypic_query.util.builder.Res;

public class ExceptionTest {

  private static final String CONFIG = "config/Weight_SQL_Adapter.yml";

  private static Phenotype weight = new Phe("weight", "http://loinc.org", "3141-92").number().get();
  private static Phenotype heavy = new Phe("heavy").restriction(weight, Res.ge(100)).get();
  private static Entity[] entities = {weight, heavy};

  private static final String LS = System.lineSeparator();
  private static final String CREATE_SBJ =
      "CREATE TABLE subject ("
          + LS
          + "    subject_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,"
          + LS
          + "    birth_date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,"
          + LS
          + "    sex        text NOT NULL,"
          + LS
          + "    PRIMARY KEY (subject_id)"
          + LS
          + ")";
  private static final String CREATE_ASM =
      "CREATE TABLE assessment1 ("
          + LS
          + "    assessment_id bigint                   NOT NULL GENERATED BY DEFAULT AS IDENTITY,"
          + LS
          + "    subject_id    bigint                   NOT NULL REFERENCES subject,"
          + LS
          + "    created_at    timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,"
          + LS
          + "    weight        numeric,"
          + LS
          + "    PRIMARY KEY (assessment_id)"
          + LS
          + ")";

  @Test
  public void test() throws InstantiationException {

    QueryCriterion cri =
        (QueryCriterion)
            new QueryCriterion()
                .inclusion(true)
                .subjectId(heavy.getId())
                .type(TypeEnum.QUERYCRITERION);
    Query query = new Query().addCriteriaItem(cri);

    URL configFile = Thread.currentThread().getContextClassLoader().getResource(CONFIG);
    assertNotNull(configFile);
    DataAdapter adapter = DataAdapter.getInstance(configFile.getPath());

    executeSql(adapter.getConfig(), CREATE_SBJ);
    executeSql(adapter.getConfig(), CREATE_ASM);

    PhenotypeFinder pf = new PhenotypeFinder(query, entities, adapter);

    Exception exception =
        assertThrows(
            SQLException.class,
            () -> {
              pf.execute();
            });

    adapter.close();

    assertNotNull(exception);
  }

  private void executeSql(DataAdapterConfig config, String... statements) {
    try {
      Connection con =
          DriverManager.getConnection(
              config.getConnectionAttribute("url"),
              config.getConnectionAttribute("user"),
              config.getConnectionAttribute("password"));
      for (String sql : statements) {
        Statement stmt = con.createStatement();
        stmt.execute(sql);
        stmt.close();
      }
      con.close();
    } catch (SQLException e) {
      e.printStackTrace();
    }
  }
}

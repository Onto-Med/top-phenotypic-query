id: TOP_FHIR_Adapter
adapter: care.smith.top.top_phenotypic_query.adapter.fhir.FHIRAdapter
connection:
  url: https://top.imise.uni-leipzig.de/fhir
baseId: patient
subjectQuery: 
  baseQuery: "Patient?_count=100"
  sexListPart: "&gender={values}"
  birthdateIntervalPart: "&birthdate{operator}{value}"
  output:
    sex: gender.value
    birthdate: birthDate
phenotypeQueries:
  encounter:
    baseQuery: "Encounter?_count=100"
    textValueListPart: "&class={values}"
    dateTimeIntervalPart: "&date{operator}{value}"
    output:
      subject: subject.reference.value
      textValue: class.code
      startDateTime: period.start
      endDateTime: period.end
      fields:
        id: id.substring(indexOf('Encounter')).replaceMatches('/_history.*', '')
  condition:
    baseQuery: "Condition?code={codes}&_count=100"
    dateTimeIntervalPart: "&recorded-date{operator}{value}"
    subjectsPart: "&subject={values}"
    output:
      subject: subject.reference.value
      dateTime: recordedDate
      fields:
        encounterId: encounter.reference.value
  observation:
    baseQuery: "Observation?code={codes}&_count=100"
    numberValueIntervalPart: "&value-quantity{operator}{value}"
    numberValueListPart: "&value-quantity={values}"
    textValueListPart: "&value-string={values}"
    conceptValueListPart: "&value-concept={values}"
    dateTimeValueIntervalPart: "&value-date{operator}{value}"
    dateTimeIntervalPart: "&date{operator}{value}"
    subjectsPart: "&subject={values}"
    output:
      subject: subject.reference.value
      numberValue: value.value
      textValue: value
      conceptValue: value.coding.select(system.value + '|' + code)
      dateTimeValue: value
      dateTime: effective
      fields:
        encounterId: encounter.reference.value
  observation_component:
    baseQuery: "Observation?component-code={codes}&_count=100"
    numberValueIntervalPart: "&component-value-quantity{operator}{value}"
    numberValueListPart: "&component-value-quantity={values}"
    conceptValueListPart: "&component-value-concept={values}"
    dateTimeIntervalPart: "&date{operator}{value}"
    subjectsPart: "&subject={values}"
    output:
      subject: subject.reference.value
      numberValue: component.where(code.coding.system.value + '|' + code.coding.code = '{code}').value.value
      conceptValue: component.where(code.coding.system.value + '|' + code.coding.code = '{code}').value.coding.select(system.value + '|' + code)
      dateTime: effective
      fields:
        encounterId: encounter.reference.value
  medication_administration:
    baseQuery: "MedicationAdministration?medication.code={codes}&_count=100"
    dateTimeIntervalPart: "&effective-time{operator}{value}"
    output:
      subject: subject.reference.value
      dateTime: effective
      startDateTime: effective.start
      endDateTime: effective.end
      fields:
        encounterId: context.reference.value
  medication_statement:
    baseQuery: "MedicationStatement?medication.code={codes}&_count=100"
    dateTimeIntervalPart: "&effective{operator}{value}"
    output:
      subject: subject.reference.value
      dateTime: effective
      startDateTime: effective.start
      endDateTime: effective.end
      fields:
        encounterId: context.reference.value
  medication_request:
    baseQuery: "MedicationRequest?medication.code={codes}&_count=100"
    dateTimeIntervalPart: "&authoredon{operator}{value}"
    output:
      subject: subject.reference.value
      dateTime: authoredOn
      startDateTime: dosageInstruction.timing.repeat.bounds.start
      endDateTime: dosageInstruction.timing.repeat.bounds.end
      fields:
        encounterId: encounter.reference.value
  medication:
    union: [ medication_administration, medication_statement, medication_request ]
  procedure:
    baseQuery: "Procedure?code={codes}&_count=100"
    dateTimeIntervalPart: "&date{operator}{value}"
    output:
      subject: subject.reference.value
      dateTime: performed
      fields:
        encounterId: encounter.reference.value
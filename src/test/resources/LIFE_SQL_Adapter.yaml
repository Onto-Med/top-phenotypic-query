id: LIFE_SQL_Adapter
connection:
  driver: org.postgresql.Driver
  url: jdbc:postgresql://server/database
  user: user1
  password: password1
valueSeparator: ', '
paramSeparator: ' AND '
queryParamSeparator: ' WHERE '
paramLimit: 'LIMIT {limit}'
operEQ: '='
operGT: '>'
operGE: '>='
operLT: '<'
operLE: '<='
patientQuery:
  baseQuery: 'SELECT * FROM Patient'
  baseQueryOnlyId: 'SELECT id FROM Patient'
  baseQueryOnlyCount: 'SELECT count(id) FROM Patient'
  paramGender: gender={gender}
  paramBirthdate: "birthdate {operator} '{birthdate}'::date"
  paramId: 'id IN ({id})'
  output:
    id: id
    gender: gender
    birthdate: birthdate
propertyQueries:
  - type: Assessment1
    baseQuery: 'SELECT {prop} FROM Assessment1'
    baseQueryOnlyCount: 'SELECT count({prop}) FROM Assessment1'
    baseQueryOnlySubject: 'SELECT DISTINCT patientId FROM Assessment1 WHERE {prop} IS NOT NULL'
    baseQueryOnlySubjectCount: 'SELECT count(DISTINCT patientId) FROM Assessment1 WHERE {prop} IS NOT NULL'
    paramValueQuantity: {prop} {operator} {value}
    paramValueText: "{prop} {operator} '{value}'"
    paramDate: "recorded_date {operator} '{date}'::date"
    paramPatientHasProp: 'EXISTS (SELECT {prop} FROM Assessment1 WHERE Assessment1.patientId = Patient.id)'
    paramId: 'id IN ({id})'
    paramSubject: 'patientId IN ({subject})'
    partSortInc: ' ORDER BY recorded_date'
    partSortDec: ' ORDER BY recorded_date DESC'
    output:
      subject: patientId
